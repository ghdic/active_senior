5분 발표 5분 영상(스크립트 최대한 간소화)
# 1 시작페이지
안녕하세요 웹프로그래밍 1팀 팀장 맡은 장진호 입니다
저희팀은 Active Senior라는 주제로 한 사이트를 만들었습니다

# 2 목차
진행 방식은 서론 본론 결론 3단으로 구성하였습니다
발표시간이 짧아서 각 내용을 가볍게 짚고 넘어가겠습니다

# 3 개발목적 & 개발환경
개발목적은 열정적인 연장자들을 위한 정보를 취합하여 제공하는 커뮤니티를 만드는 것이었으며,
개발환경은 윈도우10 64비트, 인텔리제이, mysql은 최신버전을 사용하였고,  자바 & 톰캣은 수업시간에 설치했던 버전을 사용하였습니다

# 4 사용기술
백엔드는 java, javax 라이브러리를 사용했고, 프론트는 자바스크립트 라이브러리들을 사용했습니다

# 5 역할분담
저는 전반적인 Project Manager 역할해서 프로젝트를 총괄했구
태환이는 디자인, QA 등 보조 역할을 했습니다
지원씨는 로그인, 이미지 resize 기능, introduce 페이지 등을 제작하였고
예은씨는 메인페이지, 로그인 폼, ppt, 보고서 작성 등의 일을 하였습니다

# 6 개발일정
개발일정은 동영상과 책으로 2주공부후 진행하였고, 프론트는 디자인 시안을 먼저 만들고
그것을 기반으로 만들었습니다, 백은 제머릿속에 기획 기반으로 만들졌습니다
일정이 하나 틀어졌다면, 크롤링한 데이터를 데이터베이스화 하는데 생각보다 시간이 많이 걸렸습니다

# 7 사이트구성
사이트 구성은 기존에 크게 벗어나지 않는 구조에서 살을 덧붙여 추가하는 방식으로 진행하였습니다

# 8 사이트구성
실제 JSP페이지가 구성되기 위해 이렇게 많은 서블릿과 dao, dto, 자바 소스들이 구성되어 있습니다

# 9 SQL
주요 SQL만 보면user테이블은 userID, pw, name, 권한 등으로 구성하였고,
게시판 테이블을 bbsID, 글을 쓴 userID 그리고 게시판에 필요한 정보들을 담는 컬럼을 구성하였습니다
그리고 캐릭터셋을 utfmb4로 설정하여주었습니다. mysql에서 utf-8은 3bit이므로 특수이모티콘까지 표현해주기 위해 utfmb4로 했습니다
commment는 댓글인데 bbsID로 어떤 게시글의 댓글인지 구분하고, parentID라는 것을 두어서 대댓글을 구분 할 수 있게 하였습니다

# 13 Refactory
summernote를 사용하여 게시글을 쓰게되면 이미지가 base64데이터로 넘어와서 데이터베이스에 적재되는데
이를 이미지 파일로 치환하여 해당 부분을 이미지 경로로 대체하였습니다

# 14 Refactory
컬럼이 많을 수록 set해야 할 데이터가 많기 때문에 소스코드가 더러워집니다. 이를 총괄적으로 처리하고, null인 경우는 set을 하지 않게끔 처리하기 위해서
여러종류 dto객체들이 사용 할 수 있는 제네릭타입의 getData라는 메소드 만들었습니다

# 15 Refactory
마찬가지로 insert, update같은 행위를 것을 dto객체와 테이블 명만 넘겨 주면 sql구문을 생성하여 시행할 수 있게끔 코드를 짰습니다
데이터베이스 resultset의 메타데이터 기반으로 get, set 메소드를 리플렉션으로 받아와서 매핑을 해둔 해쉬맵을 기반으로 동작을 합니다
이는 프로그램이 시작할때 dtoListener라는 친구가 시행되어 초기세팅을 해줍니다

# 16 보안
파일 이름을 랜덤한 해쉬값으로 생성하여 파일네임인젝션 공격을 회피할 수 있게 하였습니다

# 17 보안
html의 특수문자를 치환 그리고 script태그를 block으로 치환하여
크소스사이트 스크립팅과 sql injection을 예방하였습니다

# 18 보안
비밀번호 해쉬화와 솔팅을 통해 테이블 노출시 비밀번호 보호와 레인보우 테이블 공격을 예방 할 수 있게 하였습니다
패스워드를 해쉬할 경우 해쉬값+솔트값을 데이터베이스에 저장하고, 인증할때 해쉬값과 솔트값을 파싱해서 입력값이 정당한지 확인합니다

# 19 성과&소감
매번 알고리즘 문제만 풀다가 웹 개발을 직접적으로 해보니 한페이지 한페이지 사소한 부분에 얼마나 많은 시간이 드는지 체감 할 수 있었습니다
머릿속에서 구현하고 싶었던것들은 대체적으로 다 구현 되어서 만족스러운 프로젝트였다고 합니다.
해당 프로젝트는 제 깃헙에 100개넘는 커밋이 들어간 몇개안되는 레포지토리로 열심히 재밌게 했었던것 같습니다.
팀원들이 깃헙을 능숙하게 다루지 못해서 제대로 활용하지 못했었것과
협업을 하기 위해 MVC 모델을 채택했는데 코드 분리는 이루어졌으나 실제 협업단계까지 가지 못했던것은 아쉬웠습니다.


 
